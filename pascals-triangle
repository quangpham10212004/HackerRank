class Solution(object):
    def generate(self, n):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        if n==0:
            return []
        if n==1:
            return [[1]]
        res=[[1],[1,1]]
        for i in range(2,n):
            a=[1 for _ in range(i+1)]
            for j in range(1,i):
                a[j]=res[i-1][j-1]+res[i-1][j]
            res.append(a)
        return res
        
'''class Solution {
public:
    vector<int> getRow(int numRows) {
        numRows++;
        vector<vector<int>> vec;
        for (int i = 1; i <= numRows; i++) {
            vector<int> newVec(i, 1);
            vec.push_back(newVec);
        }
        for (int i = 2; i < numRows; i++) {
            for (int j = 1; j < vec[i].size() - 1; j++) {
                vec[i][j] = vec[i - 1][j - 1] + vec[i - 1][j];
            }
        }
        return vec.back();
    }
};'''