/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
typedef ListNode* node;
class Solution {
public:
    node mergeTwoLists(node list1, node list2) {
        if(list1 == NULL && list2 == NULL){
            return NULL;
        }
        node ans = new ListNode();
        node ptr = ans;
        node ptr1 = list1;
        node ptr2 = list2;
         while(ptr1 or ptr2)
        {
            if(ptr1 == NULL)
            {
                ptr->next = ptr2;
                ptr = ptr->next;
                ptr2 = ptr2->next;
                continue;
            }
            if(ptr2 == NULL)
            {
                ptr->next = ptr1;
                ptr = ptr->next;
                ptr1 = ptr1->next;
                continue;
            }

            if( ptr1->val >= ptr2->val)
            {
                ptr->next = ptr2;
                ptr = ptr->next;
                ptr2 = ptr2->next;
            }
            else
            {
                ptr->next = ptr1;
                ptr = ptr->next;
                ptr1 = ptr1->next;
            }
            

        }
        return ans->next;
    }
};