from math import *
class Solution:
    def threeSumClosest(self, nums: List[int], target: int) -> int:
        nums.sort()
        n = len(nums)
        closest_sum = float('inf') 
        smallest_diff = float('inf') 

        for i in range(n - 2):
            if i > 0 and nums[i] == nums[i - 1]:
                continue

            min_sum = nums[i] + nums[i + 1] + nums[i + 2]
            max_sum = nums[i] + nums[n - 1] + nums[n - 2]

            if min_sum >= target:
                if abs(min_sum - target) < smallest_diff:
                    return min_sum
                break

            if max_sum < target:
                if abs(max_sum - target) < smallest_diff:
                    closest_sum = max_sum
                    smallest_diff = abs(max_sum - target)
                continue


            l, r = i + 1, n - 1
            while l < r:
                current = nums[i] + nums[l] + nums[r]
                if current == target:
                    return current
                if abs(current - target) < abs(closest_sum - target):
                    closest_sum  = current
                    smallest_diff = abs(current - target)
                if current < target:
                    l += 1
                else:
                    r -= 1
        return closest_sum