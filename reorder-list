/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        ListNode* slow = head;
        ListNode* fast = head;
        while(fast && fast->next){
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode* secondHead = slow->next;
        slow->next = nullptr;
        ListNode* node = nullptr;
        while(secondHead){
            ListNode* temp = secondHead->next;
            secondHead->next = node;
            node = secondHead;
            secondHead = temp;
        }
        ListNode* firstHead = head;
        secondHead = node;

        while (secondHead) {
            ListNode* temp1 = firstHead->next;
            ListNode* temp2 = secondHead->next;
            firstHead->next = secondHead;
            secondHead->next = temp1;
            firstHead = temp1;
            secondHead = temp2;
        }
    }
};
