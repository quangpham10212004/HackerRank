/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void Node(vector<int> &res,TreeNode* root){
        if(root==NULL) return;
        Node(res,root->left);
        res.push_back(root->val);
        Node(res,root->right);
    }
    TreeNode* increasingBST(TreeNode* root) {
        vector<int> node;
        Node(node,root);
        TreeNode* res= new TreeNode(*node.begin(),NULL,NULL);
        TreeNode* temp=res;
        for(int i=1;i<node.size();i++){
            TreeNode* newNode= new TreeNode(node[i]);
            temp->right=newNode;
            temp=temp->right;
        }
        return res;
    }
};